{"version":3,"sources":["components/Button.jsx","utils/storageUtils.js","api/ajax.js","api/index.js","components/input.jsx","pages/Editor.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","_ref","title","onClick","_jsx","children","style","maxWidth","minWidth","height","marginRight","cursor","USER_KEY","USER_NAME","TOKEN","USER_ID","user","saveUser","store","set","getUser","get","removeUser","remove","saveUserId","userId","getUserId","saveUserName","userName","removeUserName","getUserName","saveToken","token","removeToken","getToken","instance","axios","create","baseURL","interceptors","request","use","config","uToken","storageUtils","headers","error","console","log","Promise","reject","response","res","reqInput","msg","data","qs","stringify","method","url","reqcontent","params","file_content","reponame","file_rel_path","fileContent","File","type","FormData","myHeaders","Headers","append","pushcontent","pullcontent","InputDemo","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","InputValue","content","handleGetInputValue","event","setState","target","value","getData","obj","forEach","v","files","push","name","key","rel_path","folders","i","InputSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","sent","localStorage","setItem","JSON","props","getTreeData","foldertree","status","message","success","stop","_createClass","Storagedata","parse","getItem","this","_jsxs","onChange","htmlType","onSubmit","React","Component","DirectoryTree","Tree","Editor","language","setEditorState","_useState","useState","_useState2","_slicedToArray","submitinfo","setSubmitinfo","_useState3","_useState4","theme","setTheme","_useState5","_useState6","cloneName","setCloneName","_useState7","_useState8","treeData","setTreeData","onFinish","_ref2","then","onPush","_ref3","_callee2","_context2","onPull","_ref4","_callee3","_context3","Layout","Form","Row","Col","span","multiple","onSelect","keys","info","node","getFile","includes","onExpand","Item","marginBottom","htmlFor","el","map","className","ControlledEditorComponent","onBeforeChange","editor","autoScroll","options","lineWrapping","lint","mode","lineNumbers","autoCloseTags","autoCloseBrackets","autofocus","focus","styleActiveLine","styleActiveSelected","showCursorWhenSelecting","App","html","setHtml","css","setCss","js","setJs","python","setPython","_useState9","_useState10","openedEditor","setOpenedEditor","_useState11","_useState12","srcDoc","setSrcDoc","Conversion","useEffect","timeOut","setTimeout","clearTimeout","onTabClick","editorName","id","sandbox","frameBorder","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a5bbcdd.chunk.js","sourcesContent":["import React from 'react'\r\nconst Button = ({title, onClick}) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        style={{\r\n          maxWidth: \"140px\",\r\n          minWidth: \"80px\",\r\n          height: \"30px\",\r\n          marginRight: \"5px\",\r\n          cursor: 'pointer'\r\n        }}\r\n        onClick={onClick}>\r\n        {title}\r\n      </button>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\nexport default Button","/*\r\n进行local数据存储管理的工具模块\r\n */\r\n//import { destroyFns } from 'antd/lib/modal/Modal'\r\nimport store from 'store'\r\n\r\nconst USER_KEY = 'user_key'\r\nconst USER_NAME = 'user_name'\r\nconst TOKEN = 'token'\r\nconst USER_ID ='user_id'\r\n\r\n// user里面存储的是login接口返回的data\r\nconst user = {\r\n    /*\r\n    保存user\r\n     */\r\n    saveUser(user) {\r\n        // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n        store.set(USER_KEY, user)\r\n    },\r\n\r\n    /*\r\n    读取user\r\n     */\r\n    getUser() {\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n        return store.get(USER_KEY) || {}\r\n    },\r\n\r\n    /*\r\n    删除user\r\n     */\r\n    removeUser() {\r\n        // localStorage.removeItem(USER_KEY)\r\n        store.remove(USER_KEY)\r\n    },\r\n    saveUserId(userId){\r\n        store.set(USER_ID,userId)\r\n    },\r\n    getUserId(){\r\n        return store.get(USER_ID) \r\n    },\r\n    /*\r\n    保存用户名\r\n     */\r\n    saveUserName(userName) {\r\n        store.set(USER_NAME, userName)\r\n    },\r\n\r\n    /*\r\n    不保存用户名\r\n     */\r\n    removeUserName() {\r\n        store.remove(USER_NAME)\r\n    },\r\n\r\n    /*\r\n    读取userName\r\n     */\r\n    getUserName() {\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n        return store.get(USER_NAME)\r\n    },\r\n\r\n    saveToken(token) {\r\n        store.set(TOKEN, token)\r\n    },\r\n\r\n    removeToken() {\r\n        store.remove(TOKEN)\r\n    },\r\n\r\n    getToken() {\r\n        return store.get(TOKEN)\r\n    }\r\n}\r\nexport default user;","import axios from 'axios';\r\nimport storageUtils from '../utils/storageUtils';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://127.0.0.1:5000'\r\n});\r\n\r\n//instance.defaults.withCredentials = true;\r\n//拦截处理器 axios在发送之前 从本地存储中获取token\r\ninstance.interceptors.request.use(\r\n  config => {\r\n    let uToken = storageUtils.getToken();\r\n    if (uToken) {\r\n      config.headers['Authorization'] = uToken;\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    console.log('发送失败了');\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\n//拦截处理器 axios截取response并对数据作出统一处理\r\ninstance.interceptors.response.use(\r\n  res => {\r\n    return res;\r\n  },\r\n  error => {\r\n    storageUtils.removeToken();\r\n    storageUtils.removeUser();\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","import instance from './ajax';\r\nimport qs from 'qs'\r\n\r\n\r\n//传递输入框内git网址\r\nexport const reqInput = msg => {\r\n  const data=qs.stringify({\r\n    'repodir': msg\r\n  })\r\n  return instance({\r\n    method: 'post',\r\n    url: '/repo/clone',\r\n   data : data\r\n  });\r\n};\r\n\r\n// export const getTreeData = params => {\r\n//   const data=qs.stringify(params)\r\n//   return instance({\r\n//     //url: '/reqcontent',\r\n//     url: '/repo/clone',\r\n//     method: 'POST',\r\n//     data:data\r\n//   });\r\n// };\r\n\r\n//点击某个文件后获取文件内容\r\nexport const getFile = params => {\r\n  const data=qs.stringify(params)\r\n  return instance({\r\n    //url: '/reqcontent',\r\n    url: '/get/file',\r\n    method: 'POST',\r\n    data:data\r\n  });\r\n};\r\n\r\n//submit编辑框内容\r\n// export const reqcontent = params => {\r\n//   const data=qs.stringify(params)\r\n//   return instance({\r\n//     //url: '/reqcontent',\r\n//     url: '/write/file',\r\n//     method: 'POST',\r\n//     data: data\r\n//   });\r\n// };\r\n\r\n\r\n// export const reqcontent =(file_content,file_rel_path,reponame) => {\r\n//   var FormData = require('form-data');\r\n//   const fileContent = Buffer.from(\"\"+file_content)\r\n//   var data = new FormData();\r\n//   data.append('data');\r\n//   data.append('reponame', reponame);\r\n//   data.append('file_rel_path', file_rel_path);\r\n//   data.append('file_content', fileContent,{\r\n//   filename:'abc.txt',\r\n//  contentType: 'text/plain',\r\n//  knownLength: fileContent.byteLength\r\n// });\r\n\r\n//   return instance({\r\n//     //url: '/reqcontent',\r\n//     url: '/write/file',\r\n//     headers: {\r\n//       // 必须要把 Content-Type 改为 multipart/form-data\r\n//       'Content-Type': 'multipart/form-data'\r\n//     },\r\n//     method: 'POST',\r\n//     data: data\r\n//   });\r\n// };\r\n\r\nexport const reqcontent =params => {\r\n  console.log(params)\r\n  const file_content=params[\"file_content\"];\r\n  const reponame=params[\"reponame\"];\r\n  const file_rel_path=params[\"file_rel_path\"];\r\n  console.log('接口里的编辑框数据file_content: ', file_content);\r\n  console.log('接口里的编辑框数据reponame: ', reponame);\r\n  console.log('接口里的编辑框数据rel_path: ', file_rel_path);\r\n  // var FormData = require('form-data');\r\n  const fileContent = new File([file_content],'fileToUpload.html', { type: '' })\r\n  var data = new FormData();\r\n\r\n  var myHeaders = new Headers();\r\n\tmyHeaders.append(\"User-Agent\", \"Apifox/1.0.0 (https://www.apifox.cn)\");\r\n  data.append('reponame', reponame);\r\n  data.append('file_rel_path', file_rel_path);\r\n  data.append('file_content', fileContent);\r\n\tconsole.log(data)\r\n  return instance({\r\n    //url: '/write/file',\r\n    url: '/commit/file',\r\n    headers: myHeaders,\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\nexport const pushcontent = params => {\r\n    const data=qs.stringify(params)\r\n    // var myHeaders = new Headers();\r\n\t  // myHeaders.append(\"User-Agent\", \"Apifox/1.0.0 (https://www.apifox.cn)\");\r\n    return instance({\r\n      url: '/git/push',\r\n      // headers: myHeaders,\r\n      method: 'POST',\r\n      data: data\r\n    });\r\n  };\r\n\r\n  \r\nexport const pullcontent = params => {\r\n  const data=qs.stringify(params)\r\n  // var myHeaders = new Headers();\r\n  // myHeaders.append(\"User-Agent\", \"Apifox/1.0.0 (https://www.apifox.cn)\");\r\n  return instance({\r\n    url: '/git/pull',\r\n    // headers: myHeaders,\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { message} from 'antd';\r\nimport { reqInput } from '../api';\r\n\r\n \r\nclass InputDemo extends React.Component{\r\n  state = {\r\n    InputValue : \"git@github.com:zhyAmber/FYP.git\",//输入框默认输入值\r\n    content:'',\r\n  };\r\n \r\ncomponentDidMount(){\r\n  let Storagedata=JSON.parse(localStorage.getItem('result.data: '))\r\n  if (Storagedata){\r\n    this.props.getTreeData(Storagedata.reponame,this.getData([Storagedata.foldertree]));\r\n    console.log('hhhhhhhhhhhhhhhhhhh')\r\n  }\r\n  \r\n}\r\n\r\n  handleGetInputValue = (event) => {\r\n    this.setState({\r\n      InputValue : event.target.value,\r\n    });\r\n    //let Storagedata=JSON.parse(this.localStorage.getItem('result.data: '))\r\n    //  console.log(\"Storagedata\",Storagedata)\r\n    // this.props.getTreeData(Storagedata.reponame,this.getData([Storagedata.foldertree]))\r\n  };\r\n\r\n  \r\n   getData = (data) => {\r\n    let obj = []\r\n    console.log(data, 'data');\r\n    data.forEach(v => {\r\n\r\n      //文件\r\n      if (v.files && v.files.length > 0) {\r\n        v.files.forEach(v => {\r\n          obj.push({\r\n            title: v.name,\r\n            key: v.rel_path\r\n          })\r\n        })\r\n      }\r\n      if(v.folders && v.folders.length > 0){\r\n        v.folders.forEach(i=>{\r\n          obj.push({\r\n            title:i.name,\r\n            key:i.rel_path,\r\n            children: this.getData([i])\r\n          })\r\n        })\r\n      }else{\r\n        obj.push({\r\n          title: v.name,\r\n          key: v.rel_path,\r\n        })\r\n      }\r\n    })\r\n    return obj\r\n  }\r\n\r\n  InputSubmit = async () => {\r\n    const {InputValue} = this.state;\r\n    console.log('传给后端的输入框数据value: ', InputValue);\r\n    let result = await reqInput(InputValue);\r\n    console.log('result: ', result);\r\n    console.log('result.data: ', result.data)\r\n    \r\n    //let Storagedata=this.state.Storagedata\r\n    //let Storagedata=JSON.parse(localStorage.getItem('result.data: '))\r\n    // console.log('Storagedata',Storagedata)\r\n    localStorage.setItem('result.data: ', JSON.stringify(result.data))\r\n    this.props.getTreeData(result.data.reponame,this.getData([result.data.foldertree]))\r\n    // localStorage.setItem('result.data: ', JSON.stringify(result.data))\r\n    //this.props.getTreeData(Storagedata.reponame,this.getData([Storagedata.foldertree]))\r\n    this.setState({\r\n      content : result.data.foldertree.files,\r\n      localStorage:result,\r\n    })\r\n    if (result.status === 200) {\r\n      message.success('输入框内容发送成功');\r\n      console.log('finish');\r\n    } else {\r\n      message.error('输入框发送出了一点问题');\r\n    }\r\n    //console.log('localstorage',localStorage)\r\n  };\r\n\r\n  render(){\r\n    return(\r\n      <div >\r\n        <input\r\n          value={this.state.InputValue}\r\n          onChange={this.handleGetInputValue}\r\n        />\r\n        <button type=\"primary\" htmlType=\"submit\" onClick={this.InputSubmit} onSubmit={this.InputSubmit}>Clone</button>\r\n\r\n        {/* <div>\r\n          <input\r\n          value={this.state.content}\r\n          onChange={this.handleGetInputValue}\r\n        />\r\n        </div> */}\r\n        \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n \r\nexport default InputDemo;","import React, { useState } from 'react';\r\nimport 'codemirror/lib/codemirror.css';\r\n\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport \"codemirror/mode/python/python.js\";\r\n\r\n\r\nimport 'codemirror/theme/dracula.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/theme/mdn-like.css';\r\nimport 'codemirror/theme/the-matrix.css';\r\nimport 'codemirror/theme/night.css';\r\n\r\n//搜索和跳转功能\r\nimport 'codemirror/addon/search/match-highlighter.js'\r\nimport 'codemirror/addon/search/jump-to-line.js'\r\n\r\nimport 'codemirror/addon/dialog/dialog.js'\r\nimport 'codemirror/addon/dialog/dialog.css'\r\nimport 'codemirror/addon/search/searchcursor.js'\r\nimport 'codemirror/addon/search/search.js'\r\n\r\n//代码高亮\r\nimport 'codemirror/addon/selection/active-line';\r\nimport { Controlled as ControlledEditorComponent } from 'react-codemirror2';\r\nimport { Form, Button, Layout, Tree, Row, Col } from 'antd';\r\nimport { reqcontent,getFile,pushcontent,pullcontent } from '../api';\r\nimport InputDemo from '../components/input';\r\n\r\nconst { DirectoryTree } = Tree;\r\n\r\nconst Editor = ({ language, value, setEditorState }) => {\r\n  const [submitinfo,setSubmitinfo] = useState();\r\n  const [theme, setTheme] = useState('dracula');\r\n  const [cloneName, setCloneName] = useState();\r\n  const [treeData, setTreeData] = useState([]);\r\n  const themeArray = ['dracula', 'material', 'mdn-like', 'the-matrix', 'night'];\r\n  const handleChange = (editor, data, value) => {\r\n    setEditorState(value);\r\n    localStorage.setItem('content',value)\r\n    // localStorage.setItem('content',JSON.stringify(value))\r\n  };\r\n\r\n  //获取上传文件\r\n  // const openFile = event => {\r\n  //   var input = event.target;\r\n  //   var reader = new FileReader();\r\n  //   reader.onload = function () {\r\n  //     if (reader.result) {\r\n  //       //显示文件内容\r\n  //       //console.log(reader.result);\r\n  //       value = reader.result;\r\n  //       handleChange(this.editor, this.data, value);\r\n  //     }\r\n  //   };\r\n  //   reader.readAsText(input.files[0]);\r\n  // };\r\n\r\n\r\n  //submit编辑框内容\r\n  const onFinish = async () => {\r\n    console.log('传给后端的编辑框数据content: ', value);\r\n    console.log('传给后端的编辑框数据reponame: ', cloneName);\r\n    console.log('传给后端的编辑框数据rel_path: ', submitinfo);\r\n    reqcontent({\r\n      file_content:value,\r\n      file_rel_path:submitinfo,\r\n      reponame:cloneName\r\n    }).then(res=>{\r\n      console.log('result :',res.data)\r\n    })\r\n    // let result = await reqcontent(value);\r\n    // console.log('result: ', result);\r\n    // if (result.status === 200) {\r\n    //   message.success('编辑框内容发送成功');\r\n    //   console.log('finish');\r\n    // } else {\r\n    //   message.error('编辑框发送出了一点问题');\r\n    // }\r\n  };\r\n\r\n  //Push到git仓库\r\n  const onPush = async () => {\r\n    console.log('传给后端的编辑框数据reponame: ', cloneName);\r\n    pushcontent({\r\n      reponame:cloneName\r\n    }).then(res=>{\r\n      console.log('result :',res.data)\r\n    })\r\n    // let result = await reqcontent(value);\r\n    // console.log('result: ', result);\r\n    // if (result.status === 200) {\r\n    //   message.success('编辑框内容发送成功');\r\n    //   console.log('finish');\r\n    // } else {\r\n    //   message.error('编辑框发送出了一点问题');\r\n    // }\r\n  };\r\n  const onPull = async () => {\r\n    console.log('传给后端的编辑框数据reponame: ', cloneName);\r\n    pullcontent({\r\n      reponame:cloneName\r\n    }).then(res=>{\r\n      console.log('result :',res.data)\r\n    })\r\n    // let result = await reqcontent(value);\r\n    // console.log('result: ', result);\r\n    // if (result.status === 200) {\r\n    //   message.success('编辑框内容发送成功');\r\n    //   console.log('finish');\r\n    // } else {\r\n    //   message.error('编辑框发送出了一点问题');\r\n    // }\r\n  };\r\n\r\n\r\n  const onSelect = (keys, info) => {\r\n    console.log('infoinfo',info)\r\n    console.log('Trigger Select', keys, info);\r\n    console.log('info',  info.node.key);\r\n    setSubmitinfo(info.node.key);\r\n    //localStorage.setItem('result.data: ', JSON.stringify(info.node))\r\n   //console.log(\"submit\",submitinfo)\r\n    getFile({\r\n      file_rel_path:info.node.key,\r\n      reponame:cloneName\r\n    }).then(res=>{\r\n      if(info.node.title.includes('html')){\r\n        res&& setEditorState(res.data)\r\n      }\r\n      if(info.node.title.includes('json')){\r\n        res&& setEditorState(JSON.stringify(res.data))\r\n      }\r\n      else{\r\n      res&& setEditorState(JSON.parse(JSON.stringify(res.data)))\r\n      }\r\n      // if(info.node.title.includes('json')){\r\n      //   res&& setEditorState(JSON.stringify(res.data))\r\n      // }\r\n      // else{\r\n      // res&& setEditorState(res.data)\r\n      // }\r\n    })\r\n    \r\n  };\r\n\r\n  const onExpand = (keys, info) => {\r\n    console.log('Trigger Expand', keys, info);\r\n  };\r\n\r\n\r\n  const getTreeData = (name,data) => {\r\n    setCloneName(name)\r\n    setTreeData(data)\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Form>\r\n        <InputDemo getTreeData={getTreeData} />\r\n      </Form>\r\n      <br />\r\n      <Row>\r\n        <Col span={6}>\r\n          <DirectoryTree\r\n            multiple\r\n            onSelect={onSelect}\r\n            onExpand={onExpand}\r\n            treeData={treeData}\r\n          />\r\n        </Col>\r\n        <Col span={18} style={{height:'100vh'}}>\r\n          <Form onFinish={onFinish}>\r\n            <Form.Item name=\"content\">\r\n              <div>\r\n                {/* 上传文件\r\n                <div>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"testJsonFile\"\r\n                    onChange={event => {\r\n                      openFile(event);\r\n                    }}\r\n                  ></input>\r\n                </div> */}\r\n\r\n                <div style={{ marginBottom: '10px' }}>\r\n                  <label htmlFor=\"cars\">选择主题: </label>\r\n                  <select\r\n                    name=\"theme\"\r\n                    onChange={el => {\r\n                      setTheme(el.target.value);\r\n                    }}\r\n                  >\r\n                    {themeArray.map(theme => (\r\n                      <option value={theme}>{theme}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n            \r\n                \r\n              </div>\r\n\r\n              <div className='editor-container'>\r\n                {/* 代码编辑框和显示 */}\r\n                <ControlledEditorComponent\r\n                  onBeforeChange={handleChange}\r\n                  value={value}\r\n                  autoScroll=\"true\"\r\n                  //className=\"code-mirror-wrapper\"\r\n                  options={{\r\n                    lineWrapping: true, // 代码自动换行\r\n                    lint: true,\r\n                    mode: language,// 语言\r\n                    lineNumbers: true, // 显示行号,\r\n                    theme: theme,//主题\r\n                    autoCloseTags: true,\r\n                    autoCloseBrackets: true,//标签自动闭合\r\n                    autofocus: true, // 自动获取焦点\r\n                    focus: true,\r\n                    styleActiveLine: true, // 光标代码高亮\r\n                    styleActiveSelected: true,\r\n                    showCursorWhenSelecting: true\r\n                  }}\r\n                />\r\n                </div>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Save & Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n\r\n          <Form onFinish={onPush}>\r\n        <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Push\r\n              </Button>\r\n              </Form.Item>\r\n        </Form>\r\n\r\n        <Form onFinish={onPull}>\r\n        <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Pull\r\n              </Button>\r\n              </Form.Item>\r\n        </Form>\r\n        </Col>\r\n\r\n      </Row>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Editor;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Button from './components/Button';\r\nimport Editor from './pages/Editor';\r\n// import {reqInput} from './api'\r\n\r\n\r\nfunction App() {\r\n  const [html, setHtml] = useState(localStorage.getItem('content') || '');\r\n  const [css, setCss] = useState('');\r\n  const [js, setJs] = useState('');\r\n  const [python, setPython] = useState('');\r\n  const [openedEditor, setOpenedEditor] = useState('html');\r\n  const [srcDoc, setSrcDoc] = useState('');\r\n  const Conversion = \"\\\\\";\r\n\r\n\r\n//   <html>\r\n//   <body>${html}</body>\r\n//   <style>${css}</style>\r\n//   <script>${js}</script>\r\n//  </html>\r\n  useEffect(() => {\r\n    const timeOut = setTimeout(() => {\r\n      setSrcDoc(\r\n        `${html}\r\n\r\n          <style>\r\n          ${css}\r\n          *{\r\n            -moz-user-select:none;/*火狐*/\r\n            -webkit-user-select:none;/*webkit浏览器*/\r\n            -ms-user-select:none;/*IE10*/\r\n            -khtml-user-select:none;/*早期浏览器*/\r\n              user-select:none;\r\n        }\r\n          .selected{\r\n            position:relative;\r\n            cursor:pointer;\r\n            }\r\n         .selected:after{\r\n              }\r\n         .selected:hover:after{\r\n            position:absolute;\r\n            left:0;\r\n            width:100%;\r\n            height:100%;\r\n            background-color:red;\r\n            opacity:.3;\r\n            pointer-events: none;\r\n            content:\"\"\r\n           }\r\n          </style>\r\n\r\n\r\n          <script>\r\n          function countNum(arr,element){\r\n             let count = 0;\r\n             for(let i=0;i<arr.length;i++){\r\n                if(arr[i]==element){\r\n                  count++\r\n                }\r\n             }\r\n             return count\r\n          }\r\n  \r\n          function getLine(word,wordNum){\r\n            let html = localStorage.getItem(\"codepen-clone-html\");\r\n            let stack =[]\r\n            let line=1;\r\n            for(let i=0;i<html.length;i++){\r\n              //判断首字母相同\r\n              if(word[0]==html[i]){\r\n                        \r\n              //判断字符出现的位置，并限定字符出现在><之间\r\n              if(html.substr(i,word.length)==word&&html[i-1]==\">\"&&html[i+word.length]==\"<\"){\r\n                  stack.push([i])\r\n                  i=i+word.length\r\n              }\r\n             }\r\n            }\r\n            let ch = 0;\r\n            for(let i=0;i<=stack[wordNum];i++){\r\n              if(html[i]!=\"${Conversion}${Conversion}\"){\r\n                ch++\r\n              }\r\n              if(html.substr(i,2)==\"${Conversion}${Conversion}n\"){\r\n                line++\r\n                ch=0;\r\n             }\r\n            }\r\n            return JSON.stringify({\r\n              line: line-1,\r\n              ch: ch-2+word.length\r\n            })\r\n          }\r\n          \r\n          window.addEventListener('scroll', function() {\r\n            localStorage.setItem(\"scrollTop\", document.documentElement.scrollTop)\r\n          })\r\n  \r\n          window.onload=function(){\r\n            let stack=[];\r\n  \r\n            let allEvent = document.getElementsByTagName(\"*\");\r\n  \r\n            //获取编辑器\r\n            let editor = window.parent.document.querySelector('.CodeMirror').CodeMirror; \r\n            document.documentElement.scrollTop = localStorage.getItem(\"scrollTop\")\r\n            \r\n            //获取navbar\r\n            let navbar = window.parent.document.getElementsByClassName(\"navbar\")[0]\r\n            let navbarToggle = window.parent.document.getElementsByClassName(\"navbar-toggle\")[0] \r\n            let menuBars = window.parent.document.getElementsByClassName(\"menu-bars\")[0] \r\n            let FF = window.parent.document.getElementsByClassName(\"Files\")[0] \r\n            //防止editor失去焦点\r\n            document.onmousedown=function(event){\r\n              event.preventDefault();\r\n            }\r\n            navbar.onmousedown=function(event){\r\n              event.preventDefault();\r\n            } \r\n        \r\n            menuBars.onmousedown=function(event){\r\n              event.preventDefault();\r\n            } \r\n  \r\n            navbarToggle.onmousedown=function(event){\r\n              event.preventDefault();\r\n            } \r\n  \r\n            FF.onmousedown=function(event){\r\n              event.preventDefault();\r\n            } \r\n  \r\n            for(let i=0;i<allEvent.length;i++){\r\n              //选择内容非空且没有孩子元素的节点\r\n              if(allEvent[i].children.length==0 && allEvent[i].innerHTML!=\"\"){\r\n                  stack.push(allEvent[i].innerHTML);\r\n                  allEvent[i].classList.add('selected');\r\n                  allEvent[i].setAttribute(\"selectedId\",countNum(stack,allEvent[i].innerHTML)-1);   \r\n                  allEvent[i].onclick=function(e){\r\n                    \r\n                    //防止失去焦点\r\n                    e.preventDefault();\r\n   \r\n                    //阻止冒泡\r\n                    e.stopPropagation();\r\n                    localStorage.setItem(\"location\",getLine(this.innerHTML,parseInt(this.getAttribute(\"selectedId\"))));    \r\n                    // console.log(localStorage.getItem(\"location\"))\r\n                    editor.setCursor(JSON.parse(localStorage.getItem(\"location\")));\r\n                }                \r\n              }          \r\n            \r\n             }                       \r\n            }\r\n            </script>\r\n\r\n           \r\n        `\r\n      )\r\n    }, 250)\r\n    // reqInput({\r\n    //   repodir:''\r\n    // }).then(res=>{\r\n    //   console.log(res);\r\n    // })\r\n    return () => {clearTimeout(timeOut)}\r\n  }, [html, css, js]);\r\n\r\n  const onTabClick = editorName => {\r\n    setOpenedEditor(editorName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <p>Welcome to Web Code Editor ！</p>\r\n      <div className=\"tab-button-container\">\r\n        <Button\r\n          title=\"HTML\"\r\n          onClick={() => {\r\n            onTabClick('html');\r\n          }}\r\n        />\r\n        <Button\r\n          title=\"CSS\"\r\n          onClick={() => {\r\n            onTabClick('css');\r\n          }}\r\n        />\r\n        <Button\r\n          title=\"JavaScript\"\r\n          onClick={() => {\r\n            onTabClick('js');\r\n          }}\r\n        />\r\n          <Button\r\n          title=\"Python\"\r\n          onClick={() => {\r\n            onTabClick('python');\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <br />\r\n\r\n      <div>\r\n            <div className=\"pane_editor\">\r\n            <div style={{height:'100%'}}>\r\n              {openedEditor === 'html' ? (\r\n                <Editor language=\"xml\" value={html} setEditorState={setHtml} />\r\n              ) : openedEditor === 'css' ? (\r\n                <Editor language=\"css\" value={css} setEditorState={setCss} />\r\n              ) : openedEditor === 'python' ? (\r\n                <Editor language=\"python\" value={python} setEditorState={setPython} />\r\n              ) : (\r\n                <Editor language=\"javascript\" value={js} setEditorState={setJs} />\r\n              )\r\n              }\r\n              </div>\r\n              {/* <iframe\r\n              srcDoc={srcDoc}\r\n              title=\"output\"\r\n              sandbox=\"allow-scripts\"\r\n              \r\n              // width=\"100%\"\r\n              // height=\"100%\"\r\n            /> */}\r\n\r\n                <div className=\"pane_iframe\">\r\n                  <iframe\r\n                    id=\"iframe\"\r\n                    srcDoc={srcDoc}\r\n                    title=\"output\"\r\n                    sandbox=\"allow-scripts allow-same-origin\"\r\n                    frameBorder=\"0\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                  />\r\n                </div> \r\n            </div>\r\n          \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}